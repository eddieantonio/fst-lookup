from typing import Mapping, Tuple, Optional
from .typedefs import StateID
from .symbol import Symbol

def not_a_header_line(line: str) -> bool: ...
def parse_state_line(line: str, implied_state: int, symbols: Mapping[int, Symbol], invert_labels: bool) -> Tuple[int, Optional[Arc], StateID]: ...

class Arc:
    def __init__(self, state: StateID, upper: Symbol, lower: Symbol, destination: StateID) -> None: ...
    @property
    def state(self) -> StateID: ...
    @property
    def upper(self) -> Symbol: ...
    @property
    def lower(self) -> Symbol: ...
    @property
    def destination(self) -> StateID: ...
